// Generated by CoffeeScript 1.12.6
(function() {
  var _, argv, canvasModule, d3, d3Node, d3n, fs, makeArt, randGen, run;

  fs = require('fs');

  d3 = require('d3');

  d3Node = require('d3-node');

  _ = require('lodash');

  canvasModule = require('canvas-prebuilt');

  randGen = require('random-seed');

  d3n = new d3Node({
    canvasModule: canvasModule
  });

  argv = require('yargs').alias('s', 'seed').argv;

  run = function() {
    var seed;
    if (argv.seed) {
      seed = argv.seed;
    } else {
      seed = Date.now();
    }
    return makeArt(seed);
  };

  makeArt = function(seed) {
    var canvas, colorScale, count, ctx, cycle, data, fileOutput, height, i, k, rand, redPoints, width;
    rand = new randGen();
    rand.seed(seed);
    console.log('seed', seed);
    canvas = d3n.createCanvas(850, 625);
    ctx = canvas.getContext('2d');
    width = canvas.width;
    height = canvas.height;
    i = 0;
    count = 200;
    colorScale = d3.scaleLinear().domain(0, count).range('#CCC ', '#000');
    redPoints = d3.range(3).map(function() {
      return {
        x: rand(width),
        y: rand(height)
      };
    });
    data = d3.range(count).map(function() {
      var j, z;
      z = width;
      j = Math.abs((i % z) - (z / 2));
      i++;
      return {
        i: i,
        x: rand(width),
        y: rand(height),
        b: _.clamp(rand(255) + j, 0, 255),
        j: j
      };
    });
    ctx.fillStyle = 'white';
    ctx.fillRect(0, 0, width, height);
    for (i = k = 1; k <= 200; i = ++k) {
      cycle = i;
      data.forEach(function(d, i) {
        d.y = d.y + rand(3);
        ctx.fillStyle = 'rgba(0,0,0,0.25)';
        return ctx.fillRect(d.x, d.y, rand(width / 8), 2);
      });
    }
    fileOutput = './dist/' + seed + '.png';
    console.log('canvas output --> ' + fileOutput);
    canvas.pngStream().pipe(fs.createWriteStream(fileOutput));
    return canvas;
  };

  module.exports = makeArt;

  if (require.main === module) {
    run();
  }

}).call(this);
